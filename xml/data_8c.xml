<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="data_8c" kind="file" language="C++">
    <compoundname>data.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="data_8h" local="yes">data.h</includes>
    <incdepgraph>
      <node id="107">
        <label>stdlib.h</label>
      </node>
      <node id="111">
        <label>cores.h</label>
        <link refid="cores_8h_source"/>
      </node>
      <node id="110">
        <label>../globals/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>string.h</label>
      </node>
      <node id="106">
        <label>modules/data.c</label>
        <link refid="data_8c"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>data.h</label>
        <link refid="data_8h"/>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="data_8c_1aee198af5c1d2b76f8964cf06d821419f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initBoard</definition>
        <argsstring>(ESTADO *state)</argsstring>
        <name>initBoard</name>
        <param>
          <type><ref refid="structestado" kindref="compound">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Inicializa o tabuleiro. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="7" column="1" bodyfile="modules/data.c" bodystart="7" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1a57ed36a9ffdf53f810da96370453904f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initPlay</definition>
        <argsstring>(ESTADO *state)</argsstring>
        <name>initPlay</name>
        <param>
          <type><ref refid="structestado" kindref="compound">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Inicializa o jogo na posição e5. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="17" column="1" bodyfile="modules/data.c" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1a3dbc5edeff7787174f06b796176a157b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initPlayer</definition>
        <argsstring>(ESTADO *state)</argsstring>
        <name>initPlayer</name>
        <param>
          <type><ref refid="structestado" kindref="compound">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Inicializa o programa com o Jogador 1 e 0 jogadas;. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="23" column="1" bodyfile="modules/data.c" bodystart="23" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1af6f7c62a8176e2173a77bca34c7995f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structestado" kindref="compound">ESTADO</ref> *</type>
        <definition>ESTADO* initState</definition>
        <argsstring>()</argsstring>
        <name>initState</name>
        <briefdescription>
<para>Cria o Estado. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Apontador do estado criado; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="32" column="1" bodyfile="modules/data.c" bodystart="32" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1a53f2ccf4535f2db6c9b6c6e143d9f87d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcoordenada" kindref="compound">COORDENADA</ref> *</type>
        <definition>COORDENADA* obterUltimaJogada</definition>
        <argsstring>(ESTADO *state)</argsstring>
        <name>obterUltimaJogada</name>
        <param>
          <type><ref refid="structestado" kindref="compound">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Lê a última coordenada jogada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Apontador para uma coordenada que contém os valores da última jogada </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="41" column="1" bodyfile="modules/data.c" bodystart="41" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1a34468b1df84ffb6f0e8b815bf6fb295c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obterJogador</definition>
        <argsstring>(ESTADO *state)</argsstring>
        <name>obterJogador</name>
        <param>
          <type><ref refid="structestado" kindref="compound">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Busca o jogador que está a jogar. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Retorna o Jogador atual; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="50" column="1" bodyfile="modules/data.c" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1a32a5d264a3e781d9def80147a2c0ebb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CASA</type>
        <definition>CASA obterEstadoCasa</definition>
        <argsstring>(ESTADO *state, COORDENADA c)</argsstring>
        <name>obterEstadoCasa</name>
        <param>
          <type><ref refid="structestado" kindref="compound">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="structcoordenada" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Encontra a CASA da coordenada dada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada Atual; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Retorna a CASA em questão; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="55" column="1" bodyfile="modules/data.c" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1a130b1b2c74cdd895c944ff860550a1a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obterNumeroJogadas</definition>
        <argsstring>(ESTADO *state)</argsstring>
        <name>obterNumeroJogadas</name>
        <param>
          <type><ref refid="structestado" kindref="compound">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Obtém o número de jogadas;. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Número de jogadas; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="60" column="1" bodyfile="modules/data.c" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1a3944e26300e70dbda6dbf52653613cbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obterMaxJogadas</definition>
        <argsstring>(ESTADO *state)</argsstring>
        <name>obterMaxJogadas</name>
        <param>
          <type><ref refid="structestado" kindref="compound">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Vai buscar o número máximo de jogadas. </para>        </briefdescription>
        <detaileddescription>
<para>Função utilizada na mostraPos para manter a possibilidade de fazer vários pos sem perder a posição atual</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>número máximo de jogadas (posições) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="64" column="1" bodyfile="modules/data.c" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1a414cdc29214160cdf6c925984ab467b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int numeroComandos</definition>
        <argsstring>(ESTADO *state)</argsstring>
        <name>numeroComandos</name>
        <param>
          <type><ref refid="structestado" kindref="compound">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Conta o número de comandos. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Multiplica por 2 e soma 1 no caso do Jogador 1 ou multiplica por 2 e soma 2 no caso do Jogador 2, ambos os casos através do número de jogadas; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="69" column="1" bodyfile="modules/data.c" bodystart="69" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1a7951f1b826d62860bc29f2dbac8f93cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obterMaxComandos</definition>
        <argsstring>(ESTADO *state)</argsstring>
        <name>obterMaxComandos</name>
        <param>
          <type><ref refid="structestado" kindref="compound">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Vai ler o número máximo de comandos que foram jogados. </para>        </briefdescription>
        <detaileddescription>
<para>Utilizado para lerJogada, mostraPos. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>máximo de comandos </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="77" column="1" bodyfile="modules/data.c" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1aef863e16c89e0dd61cb496d4782f9d5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CASA</type>
        <definition>CASA converteChar</definition>
        <argsstring>(int c)</argsstring>
        <name>converteChar</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Converte um caractér para CASA. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Caractér associado à casa; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Retorna a CASA em questão; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="81" column="1" bodyfile="modules/data.c" bodystart="81" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1af778cb6309ade305085b2f68f5a8532a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int podeJogar</definition>
        <argsstring>(CASA casa)</argsstring>
        <name>podeJogar</name>
        <param>
          <type>CASA</type>
          <declname>casa</declname>
        </param>
        <briefdescription>
<para>Verifica sse pode jogar naquela CASA. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>casa</parametername>
</parameternamelist>
<parameterdescription>
<para>Casa que pretendemos jogar; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 ou 0, caso seja possível jogar ou não, respetivamente; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="98" column="1" bodyfile="modules/data.c" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1a3ed460fa3feb6aa5806f30fb7c4e5686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structin" kindref="compound">INPUT</ref> *</type>
        <definition>INPUT* initInput</definition>
        <argsstring>()</argsstring>
        <name>initInput</name>
        <briefdescription>
<para>Inicializa o input. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Apontador para o input inicializado </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="102" column="1" bodyfile="modules/data.c" bodystart="102" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1a13f6b92d7542533b2f9bfede1bf63359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obterNivelBot</definition>
        <argsstring>(ESTADO *state)</argsstring>
        <name>obterNivelBot</name>
        <param>
          <type><ref refid="structestado" kindref="compound">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Lê o nível atual do bot. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Nível do bot </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="111" column="1" bodyfile="modules/data.c" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1a4b09f7c7ab810a21e0403ea5d7c54063" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void alteraEstadoBot</definition>
        <argsstring>(ESTADO *state)</argsstring>
        <name>alteraEstadoBot</name>
        <param>
          <type><ref refid="structestado" kindref="compound">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Altera o estado do bot. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do jogo </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="115" column="1" bodyfile="modules/data.c" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1a6cc897be0b4ab3048ad66a4cae6194ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void alteraNivelBot</definition>
        <argsstring>(ESTADO *state, int nivel)</argsstring>
        <name>alteraNivelBot</name>
        <param>
          <type><ref refid="structestado" kindref="compound">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nivel</declname>
        </param>
        <briefdescription>
<para>Altera o nível do bot. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do jogo </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="119" column="1" bodyfile="modules/data.c" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1a902fa4e25c8086edbd0fdf45233cfd92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lerEstadoBot</definition>
        <argsstring>(ESTADO *state)</argsstring>
        <name>lerEstadoBot</name>
        <param>
          <type><ref refid="structestado" kindref="compound">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Retorna o estado do bot. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 se está desativado 1 se está ativado </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="123" column="1" bodyfile="modules/data.c" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1a11efafb96b6f104ceaf29070318d3e55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char obterLinhaColuna</definition>
        <argsstring>(ESTADO *state, int jogador, int jogada, char tipo)</argsstring>
        <name>obterLinhaColuna</name>
        <param>
          <type><ref refid="structestado" kindref="compound">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jogador</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jogada</declname>
        </param>
        <param>
          <type>char</type>
          <declname>tipo</declname>
        </param>
        <briefdescription>
<para>Lê qual o valor da linha ou da coluna numa determinada jogada e jogador. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jogador</parametername>
</parameternamelist>
<parameterdescription>
<para>Jogador 1 ou jogador 2 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jogada</parametername>
</parameternamelist>
<parameterdescription>
<para>Número da jogada a ser lida </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tipo</parametername>
</parameternamelist>
<parameterdescription>
<para>Se vai ler uma linha ou coluna: &apos;c&apos; para coluna &apos;l&apos; para linha</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A coluna/linha que foi jogada numa jogada por um jogador. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="127" column="1" bodyfile="modules/data.c" bodystart="127" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1ad582ad4fea5dfdef9a63ed06ba03f694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* obterArgumentoComando</definition>
        <argsstring>(INPUT *input, int escolha)</argsstring>
        <name>obterArgumentoComando</name>
        <param>
          <type><ref refid="structin" kindref="compound">INPUT</ref> *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>int</type>
          <declname>escolha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/data.c" line="145" column="1" bodyfile="modules/data.c" bodystart="145" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data_8h" kindref="compound">data.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="data_8c_1aee198af5c1d2b76f8964cf06d821419f" kindref="member">initBoard</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m,n;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(m=MAX_HOUSES-1;m&gt;=0;m--)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(n=0;n&lt;MAX_HOUSES;n++)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;tab[m][n]<sp/>=<sp/>VAZIO;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;tab[4][4]<sp/>=<sp/>BRANCA;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;tab[7][7]<sp/>=<sp/>JOGADOR2;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;tab[0][0]<sp/>=<sp/>JOGADOR1;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="data_8c_1a57ed36a9ffdf53f810da96370453904f" kindref="member">initPlay</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;ultimaJogada.linha=4;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;ultimaJogada.coluna=4;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="data_8c_1a3dbc5edeff7787174f06b796176a157b" kindref="member">initPlayer</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>-&gt;<sp/>numJogadas<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>-&gt;<sp/>jogadorAtual<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>-&gt;<sp/>numComandos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;bot=NO;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;nivel=0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*<ref refid="data_8c_1af6f7c62a8176e2173a77bca34c7995f3" kindref="member">initState</ref>()<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*newState<sp/>=<sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structestado" kindref="compound">ESTADO</ref>));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="data_8c_1aee198af5c1d2b76f8964cf06d821419f" kindref="member">initBoard</ref>(newState);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="data_8c_1a57ed36a9ffdf53f810da96370453904f" kindref="member">initPlay</ref>(newState);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="data_8c_1a3dbc5edeff7787174f06b796176a157b" kindref="member">initPlayer</ref>(newState);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>newState-&gt;maxComandos=0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newState;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="structcoordenada" kindref="compound">COORDENADA</ref><sp/>*<ref refid="data_8c_1a53f2ccf4535f2db6c9b6c6e143d9f87d" kindref="member">obterUltimaJogada</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcoordenada" kindref="compound">COORDENADA</ref><sp/>*ultimaJog<sp/>=<sp/>(<ref refid="structcoordenada" kindref="compound">COORDENADA</ref>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcoordenada" kindref="compound">COORDENADA</ref>));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>ultimaJog-&gt;coluna=state-&gt;ultimaJogada.coluna;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>ultimaJog-&gt;linha=state-&gt;ultimaJogada.linha;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ultimaJog;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="data_8c_1a34468b1df84ffb6f0e8b815bf6fb295c" kindref="member">obterJogador</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;jogadorAtual<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">CASA<sp/><ref refid="data_8c_1a32a5d264a3e781d9def80147a2c0ebb1" kindref="member">obterEstadoCasa</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state,<sp/><ref refid="structcoordenada" kindref="compound">COORDENADA</ref><sp/>c){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;tab[c.linha][c.coluna];</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="data_8c_1a130b1b2c74cdd895c944ff860550a1a1" kindref="member">obterNumeroJogadas</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;numJogadas;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="data_8c_1a3944e26300e70dbda6dbf52653613cbb" kindref="member">obterMaxJogadas</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;maxJogadas;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="data_8c_1a414cdc29214160cdf6c925984ab467b4" kindref="member">numeroComandos</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(!state-&gt;jogadorAtual)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>(state<sp/>-&gt;numJogadas*2)+1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>(state<sp/>-&gt;<sp/>numJogadas*2)+2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;numComandos;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="data_8c_1a7951f1b826d62860bc29f2dbac8f93cd" kindref="member">obterMaxComandos</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;maxComandos;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">CASA<sp/><ref refid="data_8c_1aef863e16c89e0dd61cb496d4782f9d5b" kindref="member">converteChar</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CASA_BRANCA:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BRANCA;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CASA_PRETA:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PRETA;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CASA_VAZIO:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VAZIO;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CASA_JOGADOR1:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JOGADOR1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CASA_JOGADOR2:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JOGADOR2;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CASA_PRETA;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="data_8c_1af778cb6309ade305085b2f68f5a8532a" kindref="member">podeJogar</ref><sp/>(CASA<sp/>casa)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(casa<sp/>==<sp/>BRANCA)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="structin" kindref="compound">INPUT</ref><sp/>*<ref refid="data_8c_1a3ed460fa3feb6aa5806f30fb7c4e5686" kindref="member">initInput</ref>()<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structin" kindref="compound">INPUT</ref><sp/>*novoInput<sp/>=<sp/>(<ref refid="structin" kindref="compound">INPUT</ref><sp/>*)<sp/>malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structin" kindref="compound">INPUT</ref>));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>novoInput-&gt;comando=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>calloc(10,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>novoInput-&gt;argumento=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>calloc(10,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>novoInput;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="data_8c_1a13f6b92d7542533b2f9bfede1bf63359" kindref="member">obterNivelBot</ref>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;nivel;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="data_8c_1a4b09f7c7ab810a21e0403ea5d7c54063" kindref="member">alteraEstadoBot</ref>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;bot=!(state-&gt;bot);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="data_8c_1a6cc897be0b4ab3048ad66a4cae6194ba" kindref="member">alteraNivelBot</ref>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nivel)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;nivel=nivel;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="data_8c_1a902fa4e25c8086edbd0fdf45233cfd92" kindref="member">lerEstadoBot</ref>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;bot;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="data_8c_1a11efafb96b6f104ceaf29070318d3e55" kindref="member">obterLinhaColuna</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogador,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structjogada" kindref="compound">jogada</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tipo)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tipo<sp/>==<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(jogador<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>state-&gt;jogadas[jogada].jogador1.coluna<sp/>+</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>state-&gt;jogadas[jogada].jogador2.coluna<sp/>+</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tipo<sp/>==<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(jogador<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>state-&gt;jogadas[jogada].jogador1.linha<sp/>+<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>state-&gt;jogadas[jogada].jogador2.linha<sp/>+<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*obterArgumentoComando<sp/>(<ref refid="structin" kindref="compound">INPUT</ref><sp/>*input,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>escolha<sp/>){</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((escolha)<sp/>?<sp/>input-&gt;argumento<sp/>:<sp/>input-&gt;comando);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="modules/data.c"/>
  </compounddef>
</doxygen>
