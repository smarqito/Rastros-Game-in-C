<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="logica_8h" kind="file" language="C++">
    <compoundname>logica.h</compoundname>
    <includes refid="data_8h" local="yes">../data.h</includes>
    <includedby refid="auxiliaresBot_8c" local="yes">bot/auxiliaresBot.c</includedby>
    <includedby refid="li2pl6g05_8c" local="yes">bot/li2pl6g05.c</includedby>
    <includedby refid="ficheiros_8c" local="yes">projeto/modules/interface/ficheiros.c</includedby>
    <includedby refid="interface_8c" local="yes">projeto/modules/interface/interface.c</includedby>
    <includedby refid="interpretador_8c" local="yes">projeto/modules/interface/interpretador.c</includedby>
    <includedby refid="logica_8c" local="yes">projeto/modules/logica/logica.c</includedby>
    <incdepgraph>
      <node id="240">
        <label>../data.h</label>
        <link refid="data_8h"/>
        <childnode refid="241" relation="include">
        </childnode>
      </node>
      <node id="241">
        <label>../globals/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="242" relation="include">
        </childnode>
      </node>
      <node id="242">
        <label>cores.h</label>
        <link refid="cores_8h_source"/>
      </node>
      <node id="239">
        <label>projeto/modules/logica/logica.h</label>
        <link refid="logica_8h"/>
        <childnode refid="240" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="246">
        <label>projeto/modules/interface/interface.c</label>
        <link refid="interface_8c"/>
      </node>
      <node id="244">
        <label>bot/li2pl6g05.c</label>
        <link refid="li2pl6g05_8c"/>
      </node>
      <node id="245">
        <label>projeto/modules/interface/ficheiros.c</label>
        <link refid="ficheiros_8c"/>
      </node>
      <node id="247">
        <label>projeto/modules/interface/interpretador.c</label>
        <link refid="interpretador_8c"/>
      </node>
      <node id="248">
        <label>projeto/modules/logica/logica.c</label>
        <link refid="logica_8c"/>
      </node>
      <node id="243">
        <label>projeto/modules/logica/logica.h</label>
        <link refid="logica_8h"/>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="logica_8h_1a4f8f2b1bd6e25fc55372bdb05b5b0b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void changeCardinal</definition>
        <argsstring>(ESTADO *state, COORDENADA c)</argsstring>
        <name>changeCardinal</name>
        <param>
          <type><ref refid="data_8h_1a859d62f27ea4cc3e6db1a2bf2734d252" kindref="member">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="data_8h_1a5e3f28e43e57a17ac65133789ca1daef" kindref="member">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Muda o caratér da jogada atual;. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada em que vai ser mudado o caratér (jogada atual); </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt;Linha da jogada</para><para>&lt;Coluna da jogada</para><para>&lt;Jogada anterior -&gt; &apos;#&apos;</para><para>&lt;Jogada atual -&gt; &apos;*&apos; </para>        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="15" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="16" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a2e0eb56a3607ad2fb057ca268bf64c5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verificaVizinhanca</definition>
        <argsstring>(ESTADO *state, COORDENADA c)</argsstring>
        <name>verificaVizinhanca</name>
        <param>
          <type><ref refid="data_8h_1a859d62f27ea4cc3e6db1a2bf2734d252" kindref="member">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="data_8h_1a5e3f28e43e57a17ac65133789ca1daef" kindref="member">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Verifica se é possível escolher a CASA pretendida. </para>        </briefdescription>
        <detaileddescription>
<para>A CASA escolhida pelo Jogador tem de estar na vizinhança da última jogada; As coordenadas para a nova jogada tem de ter 1 de distância, como se verifica no gráfico que se segue: . . . . * . . . .</para><para>Neste sentido, o Jogador (marcado com &apos;*&apos;) pode mover-se para cada uma das casas marcadas com &apos;.&apos;.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada que o Jogador quer jogar; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 ou 0, caso se encontre ou não na sua vizinhança, respetivamente; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="32" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="25" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a9489ff516ef666f5bb97cff17cfe796d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verificaCasa</definition>
        <argsstring>(ESTADO *state, COORDENADA c)</argsstring>
        <name>verificaCasa</name>
        <param>
          <type><ref refid="data_8h_1a859d62f27ea4cc3e6db1a2bf2734d252" kindref="member">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="data_8h_1a5e3f28e43e57a17ac65133789ca1daef" kindref="member">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Verifica se a jogada é possível utilizando as funções obterEstadoCasa (definida no módulo <ref refid="data_8c" kindref="compound">data.c</ref>) e verificaVizinhança. </para>        </briefdescription>
        <detaileddescription>
<para>A jogada é possível se a CASA escolhida pelo Jogador estiver VAZIA ou for o JOGADOR1/JOGADOR2 (Verficado através da função -&gt; obterEstadoCasa); É necessário que a casa esteja na vizinhança (Verificado através da função -&gt; verificaVizinhanca).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada que o Jogador quer jogar; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 ou 0, caso a jogada seja possível ou não, respetivamente; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="44" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="41" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a56acd038b99ea6870b1fe8b53d545bf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void atualizaMaxJogadas</definition>
        <argsstring>(ESTADO *state)</argsstring>
        <name>atualizaMaxJogadas</name>
        <param>
          <type><ref refid="data_8h_1a859d62f27ea4cc3e6db1a2bf2734d252" kindref="member">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Atualiza o número máximo de jogadas. </para>        </briefdescription>
        <detaileddescription>
<para>Utiliza a jogadaAtual para atualizar o máximo de jogadas disponíveis.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="53" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a6632ba6b02d00ec7cf90295cbd1d78e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void atualizaJogadas</definition>
        <argsstring>(ESTADO *state, COORDENADA c)</argsstring>
        <name>atualizaJogadas</name>
        <param>
          <type><ref refid="data_8h_1a859d62f27ea4cc3e6db1a2bf2734d252" kindref="member">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="data_8h_1a5e3f28e43e57a17ac65133789ca1daef" kindref="member">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Atualiza o histórico de jogadas no respetivo Jogador. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada Atual; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="60" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="56" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a770e1a8b63f84cc1ce9a72d8fac2ff51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int divideInput</definition>
        <argsstring>(INPUT *resposta, char *input)</argsstring>
        <name>divideInput</name>
        <param>
          <type><ref refid="data_8h_1ab81ca9153c95d55639b4ab520bb2aa4d" kindref="member">INPUT</ref> *</type>
          <declname>resposta</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Divide um determinado input em comando e argumento. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resposta</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o struct INPUT que vai receber a divisão </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Linha de texto inserida pelo utilizador. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 ou !0 caso funcione ou não, respetivamente; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="69" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="69" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a19947fc319e925c3e3f1af8d51396a6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char converteCasa</definition>
        <argsstring>(CASA house)</argsstring>
        <name>converteCasa</name>
        <param>
          <type><ref refid="data_8h_1aba91601f16d4c485b2d9b8c429f27039" kindref="member">CASA</ref></type>
          <declname>house</declname>
        </param>
        <briefdescription>
<para>Converte uma CASA para o tipo char correspondente. </para>        </briefdescription>
        <detaileddescription>
<para><orderedlist>
<listitem><para>VAZIO: &apos;.&apos;;</para></listitem><listitem><para>BRANCA: &apos;*&apos;;</para></listitem><listitem><para>JOGADOR1: &apos;1&apos;;</para></listitem><listitem><para>JOGADOR2: &apos;2&apos;; 0 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>house</parametername>
</parameternamelist>
<parameterdescription>
<para>Casa que pretendemos converter; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>casa convertida mediante o char correspondente; </para></simplesect>
</para></listitem></orderedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="83" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="89" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1ad2929040a36c3d8da9e76686907b6079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verificaFim</definition>
        <argsstring>(ESTADO *state)</argsstring>
        <name>verificaFim</name>
        <param>
          <type><ref refid="data_8h_1a859d62f27ea4cc3e6db1a2bf2734d252" kindref="member">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Verifica se o Jogador chegou ao fim. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 se o jogo não acabou ~0 número do jogador que venceu </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="93" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="120" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a1426b332daf638c6034dab7ca0429e8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int converteDecimal</definition>
        <argsstring>(const char *jogada)</argsstring>
        <name>converteDecimal</name>
        <param>
          <type>const char *</type>
          <declname>jogada</declname>
        </param>
        <briefdescription>
<para>Converte dois char&apos;s para um dígito. </para>        </briefdescription>
        <detaileddescription>
<para>Funções para o interpretador <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jogada</parametername>
</parameternamelist>
<parameterdescription>
<para>Jogada;</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Retorna os respetivos char contidos na Jogada em decimal; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="106" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="131" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a50746387c4564bae4c3e92dc73b70ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int removeCarateresExtra</definition>
        <argsstring>(char *s)</argsstring>
        <name>removeCarateresExtra</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Remove caractéres extra. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>String à qual vai ser removida os caractéres; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 ou !0 caso funcione ou não, respetivamente; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="114" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="138" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a404248a51c788ab1a9b9caf8d0723e26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int atualizaCoordenadaJogada</definition>
        <argsstring>(ESTADO *state, COORDENADA *c, int jogador)</argsstring>
        <name>atualizaCoordenadaJogada</name>
        <param>
          <type><ref refid="data_8h_1a859d62f27ea4cc3e6db1a2bf2734d252" kindref="member">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="data_8h_1a5e3f28e43e57a17ac65133789ca1daef" kindref="member">COORDENADA</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jogador</declname>
        </param>
        <briefdescription>
<para>Atualiza a coordenada após a jogada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada Atual; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jogador</parametername>
</parameternamelist>
<parameterdescription>
<para>Jogador que efetuou a jogada;</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 ou ~0, caso funcione ou não, respetivamente; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="125" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="154" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1afe35cfd69885cc124daf7f437ee90997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void posAux</definition>
        <argsstring>(ESTADO *novo, COORDENADA c)</argsstring>
        <name>posAux</name>
        <param>
          <type><ref refid="data_8h_1a859d62f27ea4cc3e6db1a2bf2734d252" kindref="member">ESTADO</ref> *</type>
          <declname>novo</declname>
        </param>
        <param>
          <type><ref refid="data_8h_1a5e3f28e43e57a17ac65133789ca1daef" kindref="member">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Atualiza o estado de uma casa numa determinada coordenada, bem como a Jogada. </para>        </briefdescription>
        <detaileddescription>
<para>Modificada a última Jogada. Muda o Estado de BRANCA para PRETA.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>novo</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada Atual. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="136" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a68440f84753fc80e440610bf528c9c70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mostraPos</definition>
        <argsstring>(ESTADO *state, char *pos)</argsstring>
        <name>mostraPos</name>
        <param>
          <type><ref refid="data_8h_1a859d62f27ea4cc3e6db1a2bf2734d252" kindref="member">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Função aplicada no comando pos. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Array de Char que indica até que jogada é suposto mostrar o tabuleiro. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Número de jogadas que se pretende imprimir; </para>        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="144" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="171" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1aa527132b71e1ce1526a2e7720c9f4a80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="data_8h_1a7b7a1bfe841b83b98b0587820237fcfe" kindref="member">LISTA</ref></type>
        <definition>LISTA coordenadasPossiveis</definition>
        <argsstring>(ESTADO *state)</argsstring>
        <name>coordenadasPossiveis</name>
        <param>
          <type><ref refid="data_8h_1a859d62f27ea4cc3e6db1a2bf2734d252" kindref="member">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Calcula o número de jogadas possíveis e quais as respetivas coordenadas a partir coordenada da última jogada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Número de jogadas possíveis</para></simplesect>
Calcula o número de jogadas possíveis e quais as respetivas coordenadas a partir coordenada da última jogada.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Lista ligada com as possíveis coordenadas </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="155" column="1" bodyfile="bot/auxiliaresBot.c" bodystart="13" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1af8f04b0ef8ba02106d2c69ee789ee7b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="data_8h_1a5e3f28e43e57a17ac65133789ca1daef" kindref="member">COORDENADA</ref> *</type>
        <definition>COORDENADA* criaCoordenada</definition>
        <argsstring>(COORDENADA c)</argsstring>
        <name>criaCoordenada</name>
        <param>
          <type><ref refid="data_8h_1a5e3f28e43e57a17ac65133789ca1daef" kindref="member">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Cria um apontador do tipo void para uma coordenada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct coordenada</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Apontador alocado com malloc para uma struct COORDENADA </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="160" column="1" bodyfile="bot/auxiliaresBot.c" bodystart="34" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1adab04129af604ecb92e043383c54c971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verificaPossibilidades</definition>
        <argsstring>(ESTADO *state)</argsstring>
        <name>verificaPossibilidades</name>
        <param>
          <type><ref refid="data_8h_1a859d62f27ea4cc3e6db1a2bf2734d252" kindref="member">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Função para obter o número de Jogadas que o Jogador(Atual) pode efetuar. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>o número de Jogadas que o Jogador pode efetuar. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="169" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="203" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a9621761b29f62c0deaaf7dc4287f31f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void atualizaJogadasEstatico</definition>
        <argsstring>(ESTADO *state, int numJog)</argsstring>
        <name>atualizaJogadasEstatico</name>
        <param>
          <type><ref refid="data_8h_1a859d62f27ea4cc3e6db1a2bf2734d252" kindref="member">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numJog</declname>
        </param>
        <briefdescription>
<para>Atualiza o número de jogadas com um inteiro recebido como argumento. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do jogo </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numJog</parametername>
</parameternamelist>
<parameterdescription>
<para>Novo número de jogadas </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="177" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1af85d38bb07d158c69c08a75787b68c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void atualNumComandosEstatico</definition>
        <argsstring>(ESTADO *state, int numComandos)</argsstring>
        <name>atualNumComandosEstatico</name>
        <param>
          <type><ref refid="data_8h_1a859d62f27ea4cc3e6db1a2bf2734d252" kindref="member">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numComandos</declname>
        </param>
        <briefdescription>
<para>Atualiza o número de jogadas com argumento. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numComandos</parametername>
</parameternamelist>
<parameterdescription>
<para>Novo número de comandos </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="185" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1ab39326be63a1a7abe509faf7d989377f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void atualizaJogAtual</definition>
        <argsstring>(ESTADO *state, int jogador)</argsstring>
        <name>atualizaJogAtual</name>
        <param>
          <type><ref refid="data_8h_1a859d62f27ea4cc3e6db1a2bf2734d252" kindref="member">ESTADO</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jogador</declname>
        </param>
        <briefdescription>
<para>Atualiza o jogador atual. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do programa </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jogador</parametername>
</parameternamelist>
<parameterdescription>
<para>Próximo jogador 0 -&gt; Jogador 1 1 -&gt; Jogador 2 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/modules/logica/logica.h" line="195" column="1" bodyfile="projeto/modules/logica/logica.c" bodystart="213" bodyend="216"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Definição das função da camada de lógica do programa. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="preprocessor">#ifndef<sp/>RASTROS_LOGICA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RASTROS_LOGICA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../data.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a4f8f2b1bd6e25fc55372bdb05b5b0b30" kindref="member">changeCardinal</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state,<sp/><ref refid="structcoordenada" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a2e0eb56a3607ad2fb057ca268bf64c5c" kindref="member">verificaVizinhanca</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state,<sp/><ref refid="structcoordenada" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a9489ff516ef666f5bb97cff17cfe796d" kindref="member">verificaCasa</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state,<sp/><ref refid="structcoordenada" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a56acd038b99ea6870b1fe8b53d545bf1" kindref="member">atualizaMaxJogadas</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a6632ba6b02d00ec7cf90295cbd1d78e8" kindref="member">atualizaJogadas</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state,<sp/><ref refid="structcoordenada" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a770e1a8b63f84cc1ce9a72d8fac2ff51" kindref="member">divideInput</ref><sp/>(<ref refid="structin" kindref="compound">INPUT</ref><sp/>*resposta,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*input);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a19947fc319e925c3e3f1af8d51396a6a" kindref="member">converteCasa</ref><sp/>(<ref refid="data_8h_1aba91601f16d4c485b2d9b8c429f27039" kindref="member">CASA</ref><sp/>house);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1ad2929040a36c3d8da9e76686907b6079" kindref="member">verificaFim</ref>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a1426b332daf638c6034dab7ca0429e8c" kindref="member">converteDecimal</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structjogada" kindref="compound">jogada</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a50746387c4564bae4c3e92dc73b70ec9" kindref="member">removeCarateresExtra</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a404248a51c788ab1a9b9caf8d0723e26" kindref="member">atualizaCoordenadaJogada</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state,<sp/><ref refid="structcoordenada" kindref="compound">COORDENADA</ref><sp/>*c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogador);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1afe35cfd69885cc124daf7f437ee90997" kindref="member">posAux</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*novo,<sp/><ref refid="structcoordenada" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a68440f84753fc80e440610bf528c9c70" kindref="member">mostraPos</ref>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pos);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><ref refid="structlistas" kindref="compound">LISTA</ref><sp/><ref refid="logica_8h_1aa527132b71e1ce1526a2e7720c9f4a80" kindref="member">coordenadasPossiveis</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><ref refid="structcoordenada" kindref="compound">COORDENADA</ref><sp/>*<ref refid="logica_8h_1af8f04b0ef8ba02106d2c69ee789ee7b2" kindref="member">criaCoordenada</ref><sp/>(<ref refid="structcoordenada" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1adab04129af604ecb92e043383c54c971" kindref="member">verificaPossibilidades</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a9621761b29f62c0deaaf7dc4287f31f8" kindref="member">atualizaJogadasEstatico</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numJog);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1af85d38bb07d158c69c08a75787b68c30" kindref="member">atualNumComandosEstatico</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numComandos);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1ab39326be63a1a7abe509faf7d989377f" kindref="member">atualizaJogAtual</ref><sp/>(<ref refid="structestado" kindref="compound">ESTADO</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogador);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//RASTROS_LOGICA_H</highlight></codeline>
    </programlisting>
    <location file="projeto/modules/logica/logica.h"/>
  </compounddef>
</doxygen>
